How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped me quickly hone in on discrepancy areas.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would make tracking changes much easier.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I can't be lazy with manual commits, but it allows me to log meaningful
	changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is designed for programming code, which often has file
	interdependencies.

How can you use the commands git log and git diff to view the history of files?

    The command "git log" helps me keep track of how the file has evolved,
	while "git diff" will help me compare the details between two commits.

How might using version control make you more confident to make changes that
could break something?

    Knowing that I can easily revert to a previous commit, I can more readily
	experiment with my code and make daring changes (that may not work).

Now that you have your workspace set up, what do you want to try using Git for?

    Version control for my R code.
